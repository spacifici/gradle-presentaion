// [*] Intro
// [*] The most important thing you need to know
//      ./gradlew -Dorg.gradle.debug=true --no-daemon --console plain :libs:tasks
// [ ] Tasks
//      [*] Basic tasks
//      [ ] Working tasks <-
//      [ ] Debug/Release
// [ ] DSL
// [ ] Plugins

// As an example, we want to build a native external library using cmake and ninja
// Remind to export JAVA_HOME:
//      export JAVA_HOME="`which java | sed -r 's|(.*)((/.*?){2})$|\1|'`"

import java.nio.file.Paths

final RELATIVE_BUILD_DIR = Paths.get("build", "cmake")
final ABSOLUTE_BUILD_DIR = project.projectDir.toPath().resolve(RELATIVE_BUILD_DIR)

final RELATIVE_SOURCE_DIR = Paths.get("extern", "fbjni")
final ABSOLUTE_SOURCE_DIR = project.rootDir.toPath().resolve(RELATIVE_SOURCE_DIR)

// configure: will run cmake and generate the make files
task("configure", type: Exec) {
    commandLine = [ "cmake",
                    "-G", "Ninja",
                    "-DJAVA_HOME=${System.getenv("JAVA_HOME")}", // This is specific to fbjni
                    ABSOLUTE_SOURCE_DIR.toString() ]
    workingDir = ABSOLUTE_BUILD_DIR.toString()
    group = "configure"

    doFirst {
        ABSOLUTE_BUILD_DIR.toFile().mkdirs()
    }
}

// build: will run ninja using the file generated by configure
task("build", type: Exec) {
    commandLine = ["ninja"]
    workingDir = ABSOLUTE_BUILD_DIR.toString()
    group = "build"

    dependsOn "configure"
}
